function Vim(a,b){this.default_set={nu:!0};this.mode="NORMAL";this.convas=a;this.tabs=[new VimWindow(this)];this.tabId=0;this.win=this.tabs[this.tabId];this.fn_quit=b;this.quited=!1;this.render();var d=this.convas.getCursorPos();this.convas.setColor(FG_R|FG_G|FG_B);this.convas.cursorTo(26,6);this.convas.write("VIM.JS - Vi IMproved for JS");this.convas.cursorTo(34,8);this.convas.write("version 0.1");this.convas.cursorTo(30,9);this.convas.write("by eXerigumo Clanjor");this.convas.cursorTo(17,10);this.convas.write("Vim.js is open source and freely distributable");
this.convas.cursorTo(25,12);this.convas.write("Help poor children in Uganda!");this.convas.cursorTo(17,13);this.convas.write("type  :help iccf");this.convas.setColor(FG_B);this.convas.write("<Enter>");this.convas.setColor(FG_R|FG_G|FG_B);this.convas.write("       for information");this.convas.cursorTo(17,15);this.convas.write("type  :vimjs");this.convas.setColor(FG_B);this.convas.write("<Enter>");this.convas.setColor(FG_R|FG_G|FG_B);this.convas.write("           to get the source code");this.convas.cursorTo(17,
16);this.convas.write("type  :q");this.convas.setColor(FG_B);this.convas.write("<Enter>");this.convas.setColor(FG_R|FG_G|FG_B);this.convas.write("               to log out");this.convas.setCursorPos(d);this.is_cmd=!1;this.cmd=this.repeat="";var e=this;e.convas.readKey(!1,function c(a){a=String.fromCharCode(a);e.processKey(a);e.quited||e.convas.readKey(!1,c)})}
Vim.prototype.render=function(){if(this.tabs[this.tabId]===this.win){var a=new ConvasBuffer(this.convas.w,this.convas.h-1);this.win.render(a);this.convas.renderBuffer(a,0,0);this.convas.cursorTo(0,this.convas.h-1);this.convas.setColor(FG_R|FG_G|FG_B);this.convas.write(this.win.status_line);this.convas.cursorTo(a.x,a.y)}else this._doRender(this.tabs[this.tabId],0,0,this.convas.w,this.convas.h-1);a=this.convas.getCursorPos();this.last_status_line&&!this.err_msg&&(this.convas.cursorTo(0,this.convas.h-
1),this.convas.setColor(FG_R|FG_G|FG_B),this.convas.write(this.last_status_line),delete this.last_status_line);this.err_msg&&(this.convas.cursorTo(0,this.convas.h-1),this.convas.setColor(FG_H|FG_R|FG_G|FG_B|BG_R),this.convas.write(this.err_msg),delete this.err_msg);this.convas.setCursorPos(a);"CMDLINE"==this.mode&&(this._blankCmdLine(),this.convas.write(":"+this.cmd))};
Vim.prototype._doRender=function(a,b,d,e,f){if(a instanceof VimWindow){if(1<f){var c=new ConvasBuffer(e,f);a.render(c);this.convas.renderBuffer(c,b,d);a===this.win&&this.convas.cursorTo(c.x+b,c.y+d)}if(f){c=new ConvasBuffer(e,1);c.color=BG_H|BG_R|BG_G|BG_B;a===this.win&&(c.color|=FG_H);for(var g=0;g<e;g++)c.write(" ");c.cursorTo(0,0);c.write(a.status_line);this.convas.renderBuffer(c,b,d+f-1)}}else if(!a.is_horizon)for(g in c=f/a.wins.length,a.wins)this._doRender(a.wins[g],b,d+parseInt(g*c),e,g==a.wins.length-
1?f-parseInt(c*g):parseInt(c))};
Vim.prototype.processKey=function(a){if("NORMAL"==this.mode){this.is_cmd?this.cmd+=a:/[0-9]/.test(a)?this.repeat+=a:(this.is_cmd=!0,this.repeat=parseInt(this.repeat),this.cmd+=a);for(var b in vim_cmds)if(vim_cmds[b].regex.test(this.cmd)){this.is_cmd=!1;this.cmd=this.repeat="";vim_cmds[b].callback(this);break}}else if("CMDLINE"==this.mode)if("\r"==a){if(this.mode="NORMAL",this.cmd){this.execScript(this.cmd);if(this.quited)return;this.last_status_line=":"+this.cmd;this.cmd=""}}else"\b"==a?this.cmd?
this.cmd=this.cmd.slice(0,-1):this.mode="NORMAL":this.cmd+=a;this.render()};Vim.prototype.closeTab=function(){1==this.tabs.length?this.quit():(this.tabs.splice(this.tabId,1),this.tabId>=this.tabs.length&&(this.tabId=this.tabs.length-1),this.win=this.tabs[this.tabId])};Vim.prototype.quit=function(){this.convas.clear();this.fn_quit();this.quited=!0};
Vim.prototype._blankCmdLine=function(){this.convas.cursorTo(0,this.convas.h-1);this.convas.setColor(FG_R|FG_G|FG_B);for(var a=0;a<this.convas.w;a++)this.convas.write(" ");this.convas.cursorTo(0,this.convas.h-1)};Vim.prototype._error=function(a){this.err_msg="E000: "+a};
Vim.prototype.execScript=function(a){-1!=a.indexOf("\n")&&this._error("TODO");var b;(b=/^(v)ne(w)?|new$/.exec(a))?this.win.split("v"==b[1],!1):(b=/^(v)?sp(lit)?$/.exec(a))?this.win.split("v"==b[1],!0):/^q(uit)?$/.test(a)?this.win.close():(b=/^set\s+((no)?([a-z]+)(=(\d+))?)$/.exec(a))?b[2]&&b[4]?this._error("Invalid argument: "+b[1]):b[2]?delete this.win.set[b[3]]:(b[5]=b[5]?parseInt(b[5]):!0,this.win.set[b[3]]=b[5]):"vimjs"==a?window.open("https://github.com/cjxgm/vimjs","_blank"):"debug"==a?this.win.buffer.lines.push("Hi!\x00"):
this._error("Not an editor command: "+a)};function VimWindow(a,b){this.vim=a;this.pa=b;this.line_start=0;this.buffer=new VimBuffer(a,"");this.x=this.y=0;this.set={};for(var d in this.vim.default_set)this.set[d]=this.vim.default_set[d]}
VimWindow.prototype.render=function(a){var b=0;this.set.nu&&(b=this.buffer.lines.length.toString().length+1,4>b&&(b=4));for(var d=0,e=0,f=0,c=this.line_start;c<this.buffer.lines.length;c++){a.cursorTo(0,f);if(this.set.nu){lineno="";for(var g=b-1-c.toString().length;0<g--;)lineno+=" ";lineno+=c.toString();lineno+=" ";a.color=FG_H|FG_R|FG_G;a.write(lineno)}g=this.buffer.lines[c].split("");a.color=FG_R|FG_G|FG_B;for(var h=0;h<g.length;h++)"\x00"!=g[h]&&a.write(g[h]),h==this.x&&c==this.y&&(d=a.x,e=a.y);
f++}for(;f<a.h;f++)a.cursorTo(0,f),a.color=FG_H|FG_B,a.write("~");a.cursorTo(d,e);for(this.status_line=this.y+1+","+(this.x+1)+"      100%";this.status_line.length<a.w;)this.status_line=" "+this.status_line};
VimWindow.prototype.split=function(a,b){var d=new VimWindow(this.vim);b&&(d.buffer=this.buffer);if(this.pa)if(this.pa.is_horizon!=a){var e=new VimWindowSplit(this.vim,this.pa,a,d,this);this.pa=d.pa=e;var f=this.pa.wins.indexOf(this);this.pa.wins[f]=e}else d.pa=this.pa,f=this.pa.wins.indexOf(this),this.pa.wins.splice(f,0,d);else e=new VimWindowSplit(this.vim,this.pa,a,d,this),this.pa=d.pa=e,this.vim.tabs[this.vim.tabId]=e;this.vim.win=d};
VimWindow.prototype.close=function(){this.pa?this.pa.killWindow(this):this.vim.closeTab()};VimWindow.prototype.moveCursor=function(a,b){this.x+=a;this.y+=b;0>this.y?this.y=0:this.y>=this.buffer.lines.length&&(this.y=this.buffer.lines.length-1);0>this.x?this.x=0:this.x>=this.buffer.lines[this.y].length&&(this.x=this.buffer.lines[this.y].length-1)};function VimWindowSplit(a,b,d,e,f){this.vim=a;this.pa=b;this.wins=[e,f];this.is_horizon=d}
VimWindowSplit.prototype.killWindow=function(a){a=this.wins.indexOf(a);this.wins.splice(a,1);a>=this.wins.length&&(a=this.wins.length-1);this.vim.win=this.wins[a];1==this.wins.length&&(this.pa?this.pa.wins[this.pa.wins.indexOf(this)]=this.vim.win:this.vim.tabs[this.vim.tabId]=this.vim.win,this.vim.win.pa=void 0);this.vim.render()};function VimBuffer(a,b){this.vim=a;this.setText(b)}
VimBuffer.prototype.setText=function(a){this.lines=a.split("\n");this.lines.length||(this.lines[0]="");for(i in this.lines)this.lines[i]+="\x00"};
